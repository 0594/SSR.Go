#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

# 检测是否以 root 用户运行
[ $(id -u) != "0" ] && { echo "Error: You must be root to run this script"; exit 1; }

echo ""

echo "Welcome to the SSR.Go management assistant"
echo ""
echo "1.Service management"
echo "2.Change configuration"
echo "3.View client config information"
echo "4.Update ShadowSocksR and SSR.Go"
echo "5.Switch to Chinese version（切换到简体中文版本）"
echo "Input number to pick a function.(Press enter to exit): "

while :; do echo
    read -n1 -p "Choose: " choice
    if [[ ! $choice =~ ^[1-5]$ ]]; then
    if [[ -z ${choice} ]];then
        exit 0
    fi
        echo "Incorrect input, try it again! "
    else
        echo -e "\n"
        break	
    fi
done

# 更新ssr和ssr.go的操作
if [[ ${choice} == 4 ]]; then
    /etc/init.d/shadowsocks stop
    rm -rf /usr/local/shadowsocks
    bash -c "$(curl -fsSL https://git.io/fAUCt)"
    rm -rf /usr/local/bin/ssr
fi

# 切换语言版本
if [[ ${choice} == 5 ]]; then
    echo "Only one version of simplified Chinese or English version of SSR.Go can run, surely it? (y/n)"
    read -n1 -p "SSR.Go 简体中文版和英文版只允许同时运行一个，不可共存，是否继续操作？(y/n)" ans
    echo -e "\n"
    if [[ ${ans} =~ [yY] ]]; then
        cd /usr/local/
        rm -R SSR.Go
        git clone https://github.com/leitbogioro/SSR.Go
        chmod +x /usr/local/bin/ssr
        echo "简体中文版 SSR.Go 安装成功！"
        echo "输入 ssr 并回车即可启动！"
        exit
    else
        echo "Any operation has't been applied. "
        bash /usr/local/bin/ssr
    fi
fi

if [[ ${choice} == 1 ]]; then
    echo "1.Start service"
    echo "2.Stop service"
    echo "3.Restart service"
    echo "4.Operating status"
    echo "5.Operation log"
    while :; do echo
	    read -n1 -p "Choose: " schoice
	    if [[ ! $schoice =~ ^[1-5]$ ]]; then
            if [[ -z ${schoice} ]];then
                bash /usr/local/bin/ssr
                exit 0
            fi
		    echo "Incorrect input, try it again! "
	    else
            echo -e "\n"
		    break
	    fi
    done
	# 启动ssr
    if [[ ${schoice} == 1 ]]; then
        python /usr/local/SSR.Go/addportrules.py
        /etc/init.d/shadowsocks start
        # 这里需要添加生成二维码模块
        echo "ShadowSocksR service has been started!"
        bash /usr/local/bin/ssr
    fi
    if [[ ${schoice} == 2 ]]; then
        /etc/init.d/shadowsocks stop
        echo "ShadowSocksR service has been stopped!"
        bash /usr/local/bin/ssr
    fi
    if [[ ${schoice} == 3 ]]; then
        python /usr/local/SSR.Go/addportrules.py
        /etc/init.d/shadowsocks restart
        # 这里需要添加生成二维码模块
        echo "ShadowSocksR service has been restarted!"
        bash /usr/local/bin/ssr
    fi
    if [[ ${schoice} == 4 ]]; then
        /etc/init.d/shadowsocks status
        bash /usr/local/bin/ssr
    fi
    if [[ ${schoice} == 5 ]]; then
        echo "Press Ctrl + C to cancel viewing log."
        echo ""
        tail -f /var/log/shadowsocksr.log
        bash /usr/local/bin/ssr
    fi
fi

# 更改配置模块
if [[ ${choice} == 2 ]]; then
    echo ""
    echo "1.Change password"
    echo "2.Change port"
    echo "3.Change encryption method"
    echo "4.Change protocol"
    echo "5.Change obfs(Confuse)"
    echo "Pick a function that you need:"

    while :; do echo
	    read -n1 -p "Choose: " changechoice
	    if [[ ! $changechoice =~ ^[1-5]$ ]]; then
            if [[ -z ${changechoice} ]];then
                bash /usr/local/bin/ssr
                exit 0
            fi
		    echo "Incorrect input, try it again! "
	    else
            echo -e "\n"
		    break
	    fi
    done
    
    if [[ ${changechoice} == 1 ]]; then
        python /usr/local/SSR.Go/changepwd.py
        # 这里需要添加生成二维码模块
	/etc/init.d/shadowsocks restart
        echo ""
        echo "Password configuration is completed!"
        bash /usr/local/bin/ssr
    fi
    
    if [[ ${changechoice} == 2 ]]; then
        python /usr/local/SSR.Go/changeport.py
        # 这里需要添加生成二维码模块
	python /usr/local/SSR.Go/addportrules.py
	/etc/init.d/shadowsocks restart
        echo ""
        echo "Port configuration is completed!"
        bash /usr/local/bin/ssr
    fi
    
    if [[ ${changechoice} == 3 ]]; then
        python /usr/local/SSR.Go/changemethod.py
        # 这里需要添加生成二维码模块
	/etc/init.d/shadowsocks restart
        echo ""
        echo "Encrypt method configuration is completed!"
        bash /usr/local/bin/ssr
    fi
    
    if [[ ${changechoice} == 4 ]]; then
        python /usr/local/SSR.Go/changeprotocol.py
        # 这里需要添加生成二维码模块
	/etc/init.d/shadowsocks restart
        echo ""
        echo "Transmission protocol configuration is completed!"
        bash /usr/local/bin/ssr
    fi
    
    if [[ ${changechoice} == 5 ]]; then
        python /usr/local/SSR.Go/changeobfs.py
        # 这里需要添加生成二维码模块
	/etc/init.d/shadowsocks restart
        echo ""
        echo "Obfs model configuration is completed!"
        bash /usr/local/bin/ssr
    fi
fi

# 查看服务信息模块

if [[ ${choice} == 3 ]]; then
    python /usr/local/SSR.Go/connectinfo.py
    bash /usr/local/bin/ssr
fi
